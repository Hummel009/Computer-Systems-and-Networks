package hummel

import java.net.*

fun main() {
    val serverPort = 6061
    val serverSocket = ServerSocket(serverPort)
    println("Сервер запущен и ожидает подключений на порту $serverPort")

    while (true) {
        // Ожидание подключения клиента
        val clientSocket = serverSocket.accept()
        println("Подключение клиента: ${clientSocket.inetAddress.hostAddress}")

        // Получение данных
        val inputStream = clientSocket.getInputStream()
        val packetSize = 1024
        val expectedData = ByteArray(packetSize)
        val random = java.util.Random()

        repeat(1024) {
            val data = ByteArray(packetSize)
            inputStream.read(data)

            // Сравнение данных с эталоном
            random.nextBytes(expectedData)
            val result = if (data.contentEquals(expectedData)) 1 else 0

            // Отправка результата клиенту
            val outputStream = clientSocket.getOutputStream()
            outputStream.write(result)
            outputStream.flush()
        }

        // Закрытие соединения с клиентом
        clientSocket.close()
    }
}